---
# Source: tracker/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tracker
  labels:
    helm.sh/chart: tracker-0.20.0
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: tracker
    app.kubernetes.io/version: "0.20.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: tracker/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tracker-operator
  labels:
    helm.sh/chart: tracker-0.20.0
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: tracker
    app.kubernetes.io/version: "0.20.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: tracker/templates/tracker-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tracker-config
  labels:
    helm.sh/chart: tracker-0.20.0
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: tracker
    app.kubernetes.io/version: "0.20.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |-
    cache:
        type: mem
        size: 512
    perf-buffer-size: 1024
    healthz: true
    metrics: true
    pprof: false
    pyroscope: false
    listen-addr: :3366
    log:
        level: info
    output:
        json:
          files:
            - stdout
        options:
            parse-arguments: true
            stack-addresses: false
            exec-env: false
            exec-hash: dev-inode
            sort-events: false
---
# Source: tracker/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tracker
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tracker.khulnasoft.com
  resources:
  - policies
  verbs:
  - get
  - list
  - watch
---
# Source: tracker/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tracker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tracker
subjects:
  - kind: ServiceAccount
    name: tracker
    namespace: default
---
# Source: tracker/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tracker-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tracker
subjects:
  - kind: ServiceAccount
    name: tracker-operator
    namespace: default
---
# Source: tracker/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tracker
  labels:
    helm.sh/chart: tracker-0.20.0
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: tracker
    app.kubernetes.io/version: "0.20.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tracker
      app.kubernetes.io/instance: tracker
      type: bench
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tracker
        app.kubernetes.io/instance: tracker
        type: bench
    spec:
      nodeSelector:
        type: bench
      serviceAccountName: tracker
      hostPID: true
      securityContext:
        {}
      containers:
        - name: tracker
          image: "docker.io/khulnasoft/tracker:0.20.0"
          imagePullPolicy: Always
          command:
            - /tracker/tracker
          args:
            - --config
            - /tracker/config.yaml
          env:
            - name: LIBBPFGO_OSRELEASE_FILE
              value: /etc/os-release-host
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3366
          volumeMounts:
            - name: tmp-tracker
              mountPath: /tmp/tracker
            - name: etc-os-release
              mountPath: /etc/os-release-host
              readOnly: true
            - mountPath: /var/run/containerd/containerd.sock
              name: containerd-sock
              readOnly: true
            - mountPath: /var/run/crio/crio.sock
              name: crio-sock
              readOnly: true
            - mountPath: /var/run/docker.sock
              name: docker-sock
              readOnly: true
            - mountPath: /var/run/podman/podman.sock
              name: podman-sock
              readOnly: true
            - name: tracker-config
              readOnly: true
              mountPath: /tracker/config.yaml
              subPath: config.yaml
          resources:
            {}
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - name: tmp-tracker
          hostPath:
            path: /tmp/tracker
        - name: etc-os-release
          hostPath:
            path: /etc/os-release
        - name: containerd-sock
          hostPath:
            path: /var/run/containerd/containerd.sock
        - name: crio-sock
          hostPath:
            path: /var/run/crio/crio.sock
        - name: podman-sock
          hostPath:
            path: /var/run/podman/podman.sock
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: tracker-config
          configMap:
            name: tracker-config
---
# Source: tracker/templates/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tracker-operator
  labels:
    helm.sh/chart: tracker-0.20.0
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: tracker
    app.kubernetes.io/version: "0.20.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tracker-operator
      type: base
  template:
    metadata:
      labels:
        app: tracker-operator
        type: base
    spec:
      nodeSelector:
        type: base
      serviceAccountName: tracker-operator
      securityContext:
        {}
      containers:
      - name: tracker-operator
        image: "docker.io/khulnasoft/tracker:0.20.0"
        imagePullPolicy: Always
        command:
          - /tracker/tracker-operator
        args:
          - --health-probe-bind-address
          - :8081
        env:
          - name: TRACKER_NAME
            value: tracker
          - name: TRACKER_NAMESPACE
            value: default
        securityContext:
            privileged: true
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081